<?xml version="1.0" encoding="UTF-8"?>
<protocol name="z11_opengl">
  <copyright>TBD</copyright>
  <interface name="z11_opengl_render_component_manager" version="1">
    <description summary=""></description>

    <request name="create_opengl_render_component">
      <description summary="create new render component">TBD</description>
      <arg name="id" type="new_id" interface="z11_opengl_render_component" summary="the new render component"/>
      <arg name="virtual_object" type="object" interface="z11_virtual_object"/>
    </request>
  </interface>

  <interface name="z11_opengl_render_component" version="1">
    <description summary="OpenGL rendering component">
      Render component is a Z11 component.
    </description>

    <request name="destroy" type="destructor">
      <description summary="delete render component">TBD</description>
    </request>

    <request name="attach_vertex_buffer">
      <description summary="attach vertex buffer to the render component">
        Vertex is a double-buffered Z11 state.
        Client is allowed to attach one vertex_buffer to mulitple render_component.
      </description>
      <arg name="vertex_buffer" type="object" interface="z11_opengl_vertex_buffer"/>
    </request>

    <request name="attach_shader_program">
      <description summary="attach shader program to the render component">
        Shader program is a double-buffered Z11 state.
        Client is allowed to attach one shader_program to multiple render_component.
      </description>
      <arg name="shader_program" type="object" interface="z11_opengl_shader_program"/>
    </request>

    <request name="attach_texture_2d">
      <description summary="attach two-dimentional texture to the render component">
        2D Texture is a double-buffered Z11 state.
      </description>
      <arg name="texture_2d" type="object" interface="z11_opengl_texture_2d"/>
    </request>

    <request name="append_vertex_input_attribute">
      <description summary="append vertex input attribute info to the render component">
        Input attribute is a double-buffered Z11 state.
      </description>
      <arg name="location" type="uint" summary="shader input location number for this attribute"/>
      <arg name="format" type="uint" enum="z11_gl.vertex_input_attribute_format"/>
      <arg name="offset" type="uint"/>
    </request>

    <request name="clear_vertex_input_attributes">
      <description summary="clear vertex input attributes"/>
    </request>

    <request name="set_topology">
      <description summary="set topology mode to render 3D object">
        Topology is a double-buffered Z11 state.
      </description>
      <arg name="topology" type="uint" enum="z11_gl.topology"/>
    </request>
  </interface>

  <interface name="z11_opengl" version="1">
    <description summary="OpenGL api">TBD</description>

    <request name="create_vertex_buffer">
      <description summary="create a vertex buffer">TBD</description>
      <arg name="id" type="new_id" interface="z11_opengl_vertex_buffer" summary="the new vertex buffer"/>
    </request>

    <request name="create_shader_program">
      <description summary="create a OpenGL Shader Language program">TBD</description>
      <arg name="id" type="new_id" interface="z11_opengl_shader_program" summary="the new GLSL program"/>
      <arg name="vertex_shader_source" type="string"/>
      <arg name="fragment_shader_source" type="string"/>
    </request>

    <request name="create_texture_2d">
      <description summary="create a two-dimentional texture">TBD</description>
      <arg name="id" type="new_id" interface="z11_opengl_texture_2d" summary="the new two-dimentinal texture"/>
    </request>

    <enum name="topology">
      <entry name="points" value="0"/>
      <entry name="lines" value="1"/>
      <entry name="line_strip" value="2"/>
      <entry name="triangles" value="3"/>
      <entry name="triangle_strip" value="4"/>
      <entry name="triangle_fan" value="5"/>
    </enum>

    <enum name="vertex_input_attribute_format">
      <entry name="float_scalar" value="0"/>
      <entry name="float_vector2" value="1"/>
      <entry name="float_vector3" value="2"/>
      <entry name="float_vector4" value="3"/>
    </enum>
  </interface>

  <interface name="z11_opengl_vertex_buffer" version="1">
    <description summary="vertex buffer">TBD</description>

    <request name="destroy" type="destructor">
      <description summary="delete vertex buffer">TBD</description>
    </request>

    <request name="attach">
      <description summary="attach buffer">TBD</description>
      <arg name="raw_buffer" type="object" interface="wl_raw_buffer"/>
      <arg name="vertex_stride" type="uint"/>
    </request>
  </interface>

  <interface name="z11_opengl_shader_program" version="1">
    <description summary="OpenGL Shader Language program">
      Contains vertex shader and fragmane shader.
    </description>

    <request name="destroy" type="destructor">
      <description summary="delete vertex buffer">TBD</description>
    </request>

    <enum name="error">
      <entry name="compilation_error" value="0"/>
    </enum>
  </interface>

  <interface name="z11_opengl_texture_2d" version="1">
    <description summary="Two dimentianal texture">TBD</description>

    <request name="destroy" type="destructor">
      <description summary="delete texture">TBD</description>
    </request>

    <request name="set_image">
      <description summary="delete texture">TBD</description>
      <arg name="raw_buffer" type="object" interface="wl_raw_buffer"/>
      <arg name="format" type="uint" enum="format"/>
      <arg name="width" type="int"/>
      <arg name="height" type="int"/>
    </request>

    <enum name="format">
      <description summary="format of input image">TBD</description>
      <entry name="argb8888" value="0" summary="32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian"/>
    </enum>
  </interface>
</protocol>
