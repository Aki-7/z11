<?xml version="1.0" encoding="UTF-8"?>
<protocol name="z11">
  <copyright>TBD</copyright>

  <interface name="z11_compositor" version="1">
    <description summary="core global object for 3D client">TBD</description>

    <request name="create_virtual_object">
      <description summary="create new virtual object">TBD</description>
      <arg name="id" type="new_id" interface="z11_virtual_object" summary="the new virtual object"/>
    </request>
  </interface>

  <interface name="z11_virtual_object" version="1">
    <description summary="https://github.com/gray-armor/z11/wiki/interface:-z11_virtual_object"/>

    <request name="destroy" type="destructor">
      <description summary="destroy virtual object">TBD</description>
    </request>

    <enum name="error">
      <entry name="defunct_component" value="0" summary="virtual object was destroyed before it's components"/>
    </enum>

    <request name="commit">
      <description summary="commit pending virtual object state">
        A commit request atomically applies all pending state, replacing the
        current state.

        All requests that need a commit to become effective are documented to
        affect double-buffered state

        Other interfaces may add further double-buffered surface state.
      </description>
    </request>

    <request name="frame">
      <description summary="request a frame throttling hint">TBD</description>
      <arg name="callback" type="new_id" interface="wl_callback" summary="callback object for the frame request"/>
    </request>
  </interface>
</protocol>
